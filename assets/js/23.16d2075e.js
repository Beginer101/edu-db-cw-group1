(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{655:function(n,e,i){"use strict";i.r(e);var s=i(34),_=Object(s.a)({},(function(){var n=this,e=n.$createElement,i=n._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("h1",{attrs:{id:"реалізація-інформаціиного-та-програмного-забезпечення"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-інформаціиного-та-програмного-забезпечення"}},[n._v("#")]),n._v(" Реалізація інформаційного та програмного забезпечення")]),n._v(" "),i("h2",{attrs:{id:"sql-скрипт-для-створення-на-початкового-наповнення-бази-даних"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#sql-скрипт-для-створення-на-початкового-наповнення-бази-даних"}},[n._v("#")]),n._v(" SQL-скрипт для створення на початкового наповнення бази даних")]),n._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[n._v("-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema quiz\n-- -----------------------------------------------------\nDROP SCHEMA IF EXISTS `quiz` ;\n\n-- -----------------------------------------------------\n-- Schema quiz\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `quiz` DEFAULT CHARACTER SET utf8 ;\nUSE `quiz` ;\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Role`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Role` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Role` (\n`id` INT NOT NULL,\n`name` VARCHAR(32) NULL,\nPRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Permission`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Permission` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Permission` (\n`id` INT NOT NULL,\n`name` VARCHAR(32) NULL,\nPRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Grant`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Grant` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Grant` (\n`id` INT NOT NULL,\n`appointed` DATE NULL,\n`Role_id` INT NOT NULL,\n`Permission_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Role_id`, `Permission_id`),\nINDEX `fk_Grant_Role1_idx` (`Role_id` ASC) VISIBLE,\nINDEX `fk_Grant_Permission1_idx` (`Permission_id` ASC) VISIBLE,\nCONSTRAINT `fk_Grant_Role1`\nFOREIGN KEY (`Role_id`)\nREFERENCES `quiz`.`Role` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Grant_Permission1`\nFOREIGN KEY (`Permission_id`)\nREFERENCES `quiz`.`Permission` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`User`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`User` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`User` (\n`id` INT NOT NULL AUTO_INCREMENT,\n`first_name` VARCHAR(45) NULL,\n`last_name` VARCHAR(45) NULL,\n`nick_name` VARCHAR(45) NULL,\n`email` VARCHAR(128) NULL,\n`password` VARCHAR(64) NULL,\n`Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Role_id`),\nINDEX `fk_User_Role1_idx` (`Role_id` ASC) VISIBLE,\nUNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,\nUNIQUE INDEX `nick_name_UNIQUE` (`nick_name` ASC) VISIBLE,\nCONSTRAINT `fk_User_Role1`\nFOREIGN KEY (`Role_id`)\nREFERENCES `quiz`.`Role` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Survey`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Survey` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Survey` (\n`id` INT NOT NULL,\n`title` VARCHAR(45) NULL,\n`description` LONGTEXT NULL,\n`created` DATE NULL,\n`User_id` INT NOT NULL,\n`User_Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `User_id`, `User_Role_id`),\nINDEX `fk_Survey_User1_idx` (`User_id` ASC, `User_Role_id` ASC) VISIBLE,\nCONSTRAINT `fk_Survey_User1`\nFOREIGN KEY (`User_id` , `User_Role_id`)\nREFERENCES `quiz`.`User` (`id` , `Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Question`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Question` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Question` (\n`id` INT NOT NULL,\n`text` LONGTEXT NULL,\n`type` VARCHAR(32) NULL,\n`Survey_id` INT NOT NULL,\n`Survey_User_id` INT NOT NULL,\n`Survey_User_Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Survey_id`, `Survey_User_id`, `Survey_User_Role_id`),\nINDEX `fk_Question_Survey1_idx` (`Survey_id` ASC, `Survey_User_id` ASC, `Survey_User_Role_id` ASC) VISIBLE,\nCONSTRAINT `fk_Question_Survey1`\nFOREIGN KEY (`Survey_id` , `Survey_User_id` , `Survey_User_Role_id`)\nREFERENCES `quiz`.`Survey` (`id` , `User_id` , `User_Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Answer`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Answer` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Answer` (\n`id` INT NOT NULL,\n`text` LONGTEXT NULL,\n`User_id` INT NOT NULL,\n`User_Role_id` INT NOT NULL,\n`Question_id` INT NOT NULL,\n`Question_Survey_id` INT NOT NULL,\n`Question_Survey_User_id` INT NOT NULL,\n`Question_Survey_User_Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `User_id`, `User_Role_id`, `Question_id`, `Question_Survey_id`, `Question_Survey_User_id`, `Question_Survey_User_Role_id`),\nINDEX `fk_Answer_User1_idx` (`User_id` ASC, `User_Role_id` ASC) VISIBLE,\nINDEX `fk_Answer_Question1_idx` (`Question_id` ASC, `Question_Survey_id` ASC, `Question_Survey_User_id` ASC, `Question_Survey_User_Role_id` ASC) VISIBLE,\nCONSTRAINT `fk_Answer_User1`\nFOREIGN KEY (`User_id` , `User_Role_id`)\nREFERENCES `quiz`.`User` (`id` , `Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Answer_Question1`\nFOREIGN KEY (`Question_id` , `Question_Survey_id` , `Question_Survey_User_id` , `Question_Survey_User_Role_id`)\nREFERENCES `quiz`.`Question` (`id` , `Survey_id` , `Survey_User_id` , `Survey_User_Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`State`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`State` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`State` (\n`id` INT NOT NULL,\n`name` VARCHAR(32) NULL,\nPRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Action`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Action` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Action` (\n`id` INT NOT NULL,\n`date` DATE NULL,\n`Survey_id` INT NOT NULL,\n`Survey_User_id` INT NOT NULL,\n`Survey_User_Role_id` INT NOT NULL,\n`Role_id` INT NOT NULL,\n`State_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Survey_id`, `Survey_User_id`, `Survey_User_Role_id`, `Role_id`, `State_id`),\nINDEX `fk_Action_Survey1_idx` (`Survey_id` ASC, `Survey_User_id` ASC, `Survey_User_Role_id` ASC) VISIBLE,\nINDEX `fk_Action_Role1_idx` (`Role_id` ASC) VISIBLE,\nINDEX `fk_Action_State1_idx` (`State_id` ASC) VISIBLE,\nCONSTRAINT `fk_Action_Survey1`\nFOREIGN KEY (`Survey_id` , `Survey_User_id` , `Survey_User_Role_id`)\nREFERENCES `quiz`.`Survey` (`id` , `User_id` , `User_Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Action_Role1`\nFOREIGN KEY (`Role_id`)\nREFERENCES `quiz`.`Role` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Action_State1`\nFOREIGN KEY (`State_id`)\nREFERENCES `quiz`.`State` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n")])])]),i("h2",{attrs:{id:"restfull-сервіс-для-управління-даними"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#restfull-сервіс-для-управління-даними"}},[n._v("#")]),n._v(" RESTfull сервіс для управління даними")]),n._v(" "),i("p",[n._v("RESTfull сервіс для управління таблиці User у базі даних 'quiz' створеної в MySQL. Цей застосунок був створений за допомогою\nфреймворку Flask на мові Python.\nRESTfull сервіс представляє собою базовий CRUD застосунок, тобто \"Набор джентельмена\", Create, Read, Update і Delete.")]),n._v(" "),i("h3",{attrs:{id:"фаил-app-py"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#фаил-app-py"}},[n._v("#")]),n._v(" Файл app.py")]),n._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[n._v("from flask import Flask, request, jsonify\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:Ddnl6q01@localhost/quiz'\ndb = SQLAlchemy(app)\n\nclass Permission(db.Model):\nid = db.Column(db.Integer, primary_key=True)\nname = db.Column(db.String(32), nullable=False)\n\ndef __init__(self, id, name):\n    self.id = id\n    self.name = name\n\n@app.route('/permissions', methods=['GET'])\ndef get_permissions():\n    permissions = Permission.query.all()\n    result = [{'id': permission.id, 'name': permission.name} for permission in permissions]\n    return jsonify(result)\n\n@app.route('/permissions', methods=['POST'])\ndef create_permission():\n    data = request.get_json()\n    id = data.get('id')\n    name = data.get('name')\n\nif not id or not name:\n    return jsonify({'error': 'Ідентифікатор та ім`я обов`язкові'}), 400\n\nexisting_permission = Permission.query.filter_by(id=id).first()\nif existing_permission:\n    return jsonify({'error': f'Дозвіл з ідентифікатором {id} вже існує'}), 409\n\nexisting_permission = Permission.query.filter_by(name=name).first()\nif existing_permission:\n    return jsonify({'error': f'Дозвіл з іменем {name} вже існує'}), 409\n\nnew_permission = Permission(id=id, name=name)\ndb.session.add(new_permission)\ndb.session.commit()\n\nreturn jsonify({'message': f'Дозвіл з ідентифікатором {id} та іменем {name} створений успішно'}), 201\n\n@app.route('/permissions/<int:id>', methods=['PUT'])\ndef update_permission(id):\n    permission = Permission.query.get(id)\n\nif not permission:\n    return jsonify({'error': f'Дозвіл з ідентифікатором {id} не знайдений'}), 404\n\ndata = request.get_json()\nname = data.get('name')\n\nif not name:\n    return jsonify({'error': 'Ім`я обов`язкове'}), 400\n\nexisting_permission = Permission.query.filter(Permission.name == name, Permission.id != id).first()\nif existing_permission:\n    return jsonify({'error': f'Дозвіл з іменем {name} вже існує'}), 409\n\npermission.name = name\ndb.session.commit()\n\nreturn jsonify({'message': f'Дозвіл з ідентифікатором {id} оновлений успішно, нове ім`я - {name}'})\n\n@app.route('/permissions/<int:id>', methods=['DELETE'])\ndef delete_permission(id):\n    permission = Permission.query.get(id)\n\nif not permission:\n    return jsonify({'error': f'Дозвіл з ідентифікатором {id} не знайдений'}), 404\npermission_name = permission.name\n\ndb.session.delete(permission)\ndb.session.commit()\nreturn jsonify({'message': f'Дозвіл з ідентифікатором {id} та іменем {permission_name} видалений успішно'})\n\nif __name__ == '__main__':\n    app.run(debug=True)\n")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);